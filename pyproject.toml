[build-system]
requires = [ "setuptools",]
build-backend = "setuptools.build_meta"

[project]
name = "kedro_mlops"
readme = "README.md"
dynamic = [ "dependencies", "version",]

[project.scripts]
kedro-mlops = "kedro_mlops.__main__:main"

[tool.kedro]
package_name = "kedro_mlops"
project_name = "kedro-mlops"
kedro_init_version = "0.19.2"
tools = [ "Linting", "Testing", "Data Structure", "Kedro Viz",]
example_pipeline = "False"
source_dir = "src"

[project.entry-points."kedro.hooks"]

[tool.ruff]
line-length = 88
show-fixes = true

[tool.ruff.lint]

ignore = [ "E501",]
# select = [ "F", "W", "E", "I", "UP", "PL", "T201",]
# By default, ruff only uses all "E" (pycodestyle) and "F" (pyflakes) rules.
# Here we append to the defaults.
extend-select = [
    # pycodestyle
    "W",

    # mccabe
    #"C90",

    # isort
    "I",

    # pep-naming
    #"N",

    # pydocstyle
    "D101",
    "D106",
    "D2",
    "D3",
    "D402",
    "D403",
    "D412",
    "D419",

    # pyupgrade
    "UP",

    # flake8-2020
    "YTT",

    # flake8-annotations
    #"ANN",

    # flake8-bandit
    #"S",

    # flake8-blind-except
    #"BLE",

    # flake8-boolean-trap
    #"FBT",

    # flake8-bugbear
    "B",

    # flake8-builtins
    #"A",

    # flake8-comprehensions
    #"C4",

    # flake8-datetimez
    #"DTZ",

    # flake8-errmsg
    #"EM",

    # flake8-import-conventions
    #"ICN",

    # flake8-logging-format
    #"G",

    # flake8-pie
    "PIE",

    # flake8-pyi
    "PYI",

    # flake8-quotes
    "Q",

    # flake8-self
    #"SLF",

    # flake8-simplify
    #"SIM",

    # flake8-tidy-imports
    "TID",

    # flake8-type-checking
    "TCH",

    # pandas-vet
    #"PD",

    # pylint
    "PLE",
    "PLR",
    "PLW",

    # NumPy-specific rules
    #"NPY",

    # ruff specific ones:
    "RUF",
]

extend-ignore = [
    # 1 blank line required between summary line and description
    "D205",
    # Too many arguments to function call
    "PLR0913",
    # Magic number
    "PLR2004",
]

[tool.ruff.lint.pydocstyle]

# Enforce google-style docstrings. This is equivalent to ignoring a large number of pydocstyle (D)
# rules incompatible with google-style docstrings. See:
# https://google.github.io/styleguide/pyguide.html#383-functions-and-methods
convention = "google"

[tool.pytest.ini_options]
addopts = "--cov-report term-missing --cov src/kedro_mlops -ra"

[tool.coverage.report]
fail_under = 90
show_missing = true
exclude_lines = [ "pragma: no cover", "raise NotImplementedError",]

[tool.coverage.run]
omit = [
    # kedro project template code
    "src/kedro_mlops/__main__.py",
    "src/kedro_mlops/pipeline_registry.py",
    "src/kedro_mlops/settings.py",
]


[tool.setuptools.dynamic.dependencies]
file = "requirements.txt"

[tool.setuptools.dynamic.version]
attr = "kedro_mlops.__version__"

[tool.setuptools.packages.find]
where = [ "src",]
namespaces = false
